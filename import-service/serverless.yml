service: import-service-v7
frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    BUCKET_NAME: ${env:BUCKET_NAME}
    SQS_URL: ${env:SQS_URL}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
          Resource: "arn:aws:s3:::${env:BUCKET_NAME}/*"
        - Effect: Allow
          Action:
            - sqs:*
          Resource: "arn:aws:sqs:us-east-1:345840731224:catalogItemsQueue"

plugins:
  - serverless-webpack

functions:
  importProductsFile:
    handler: src/importProductsFile.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          authorizer:
            name: basicAuthorizer
            arn: "arn:aws:lambda:us-east-1:345840731224:function:authorization-service-dev-basicAuthorizer"
            identitySource: method.request.header.Authorization
            type: token
          request:
            parameters:
              querystrings:
                name: true

  importFileParser:
    handler: src/importFileParser.importFileParser
    events:
      - s3:
          bucket: ${env:BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
